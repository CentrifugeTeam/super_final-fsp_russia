"""empty message

Revision ID: e8295acbe88e
Revises: 768e3638a72a
Create Date: 2024-12-11 20:01:03.097523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy.ext.asyncio import AsyncSession, AsyncConnection
from polyfactory.factories.sqlalchemy_factory import SQLAlchemyFactory

#class Factory(SQLAlchemyFactory):
#    __model__ =
#    __set_relationships__ = True


# revision identifiers, used by Alembic.
revision: str = 'e8295acbe88e'
down_revision: Union[str, None] = '768e3638a72a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('districts',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('areas',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('contacts', sa.String(), nullable=True),
    sa.Column('leader_id', sa.Integer(), nullable=False),
    sa.Column('district_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['district_id'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['leader_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )

    op.create_table('team_participation',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('users_representation_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'representation_id')
    op.drop_constraint('teams_federal_representation_id_fkey', 'teams', type_='foreignkey')
    op.drop_constraint('teams_event_id_fkey', 'teams', type_='foreignkey')
    op.drop_column('teams', 'federal_representation_id')
    op.drop_column('teams', 'event_id')
    op.drop_table('region_representations')
    op.drop_table('representations')
    op.add_column('teams', sa.Column('area_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'teams', 'areas', ['area_id'], ['id'])


    # ### end Alembic commands ###
    async def seed_db(connection: AsyncConnection):
        session = AsyncSession(bind=connection)
#       Factory.__async_session__ = session
#       await Factory.create_batch_async(10)


    op.run_async(seed_db)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('representation_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_representation_id_fkey', 'users', 'representations', ['representation_id'], ['id'])
    op.add_column('teams', sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('teams', sa.Column('federal_representation_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'teams', type_='foreignkey')
    op.create_foreign_key('teams_event_id_fkey', 'teams', 'events', ['event_id'], ['id'])
    op.create_foreign_key('teams_federal_representation_id_fkey', 'teams', 'representations', ['federal_representation_id'], ['id'])
    op.drop_column('teams', 'area_id')
    op.create_table('representations',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('photo_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contacts', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('representations_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='representations_pkey'),
    sa.UniqueConstraint('name', name='representations_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('region_representations',
    sa.Column('representation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('leader_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('federal_district_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['federal_district_id'], ['representations.id'], name='region_representations_federal_district_id_fkey'),
    sa.ForeignKeyConstraint(['leader_id'], ['users.id'], name='region_representations_leader_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['representation_id'], ['representations.id'], name='region_representations_representation_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='region_representations_pkey')
    )
    op.drop_table('team_participation')
    op.drop_table('districts')
    op.drop_table('areas')
    # ### end Alembic commands ###
