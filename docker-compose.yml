services:

  frontend:
    build:
      context: frontend/platform
      dockerfile: Dockerfile
    container_name: frontend

  postgres:
    image: postgres
    env_file:
      - ./.env
    container_name: postgres
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]



  redis:
    image: redis/redis-stack:latest
    container_name: redis
    expose:
      - 6379
    volumes:
      - redis_volume:/data
  
  backend:
    build:
      context: ./backend
      dockerfile: ./web.Dockerfile
    volumes:
      - ./backend/src/web:/src/web
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis

    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

    container_name: backend
    expose:
      - 80

  service_calendar:
    build:
      context: ./backend
      dockerfile: ./calendar.Dockerfile
    volumes:
      - ./backend/src/service_calendar:/src/service_calendar
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis

    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

    container_name: service_calendar


  frontend_calendar:
      build:
        context: frontend/calendar
        dockerfile: Dockerfile

      container_name: frontend_calendar  

  

  worker:
   build:
     context: ./backend
     dockerfile: worker.Dockerfile
   env_file:
     - ./.env
   environment:
     POSTGRES_HOST: postgres
     REDIS_HOST: redis
   command: >
      saq worker.src.worker.settings --verbose

   depends_on:
     redis:
       condition: service_started
     postgres:
       condition: service_healthy

   container_name: worker


  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8002:80"
    container_name: pgadmin4
    volumes:
      - pgadmin_volume:/var/lib/pgadmin

    environment:
      - PGADMIN_DEFAULT_EMAIL=user@example.com
      - PGADMIN_DEFAULT_PASSWORD=12345
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False

    depends_on:
      - postgres


  nginx:
   container_name: nginx
   image: nginx:latest
   ports:
     - "80:80"
     - "443:443"
   volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
     - ./nginx/cors.conf:/etc/nginx/cors.conf
     - ./backend/src/web/app/static:/www/data
     - /var/www/certbot:/var/www/certbot
     - /etc/letsencrypt:/etc/letsencrypt:ro 
   depends_on:
     - backend
     - frontend
     - frontend_calendar
     - service_calendar



volumes:
  redis_volume: {}
  pgdata: {}
  pgadmin_volume: